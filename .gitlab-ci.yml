variables:
  # disable the Gradle daemon for Continuous Integration servers
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

stages:
  - build
  - test
  - publish

build:linux:jdk8:
  image: openjdk:8
  stage: build
  script:
    # create the executables for distribution
    - ./gradlew --build-cache :cli:assembleDist --info
    - mkdir bin
    - cp cli/build/libs/*.jar bin/
    - cp cli/build/distributions/*.zip bin/
    # create checksum file to make sure we're distributing the right thing
    - cd bin
    - md5sum *.{jar,zip} > checksums.txt
  artifacts:
    name: "$CI_COMMIT_REF_NAME-snapshot"
    paths:
      - bin
    expire_in: 1 week

build:manual:
  image: registry.gitlab.com/islandoftex/images/texlive:latest
  stage: build
  script:
    - ./gradlew buildManual
  artifacts:
    name: "$CI_COMMIT_REF_NAME-docs"
    paths:
      - docs/checkcites-manual.pdf
    expire_in: 1 week

test:dependencyupdates:
  image: openjdk:8
  stage: test
  script:
    - ./gradlew dependencyUpdates

.ctantemplate: &ctandefinition
  stage: publish
  image: registry.gitlab.com/islandoftex/images/texlive:latest
  needs: ["build:linux:jdk8"]
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends zip
    - ./gradlew -Prelease=$PRELEASE assembleCTAN --info
    - cp build/*.zip ./
  artifacts:
    name: "$CI_COMMIT_REF_NAME-ctan"
    paths:
      - ./*.zip
      - docs/*.pdf
    expire_in: 1 week
  cache:
    key: "$CI_COMMIT_REF_NAME-$JAVA_VERSION"
    policy: pull
    paths:
      - build
      - .gradle
publish:snapshot_tdszip:
  variables:
    PRELEASE: "false"
  <<: *ctandefinition
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: never
    - if: '$CI_COMMIT_REF_NAME'
      when: always
publish:tdszip:
  variables:
    PRELEASE: "true"
  <<: *ctandefinition
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - if: '$CI_COMMIT_TAG'

